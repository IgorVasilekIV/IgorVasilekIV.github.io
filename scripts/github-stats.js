// github-stats.js
const CACHE_TIME = 15 * 60 * 1000; // 15 –º–∏–Ω—É—Ç –∫—ç—à–∞

async function fetchReposWithRetry(username, retries = 3) {
    for (let i = 0; i < retries; i++) {
        try {
            const response = await fetch(`https://api.github.com/users/${username}/repos?per_page=100`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã API
            const remaining = parseInt(response.headers.get('X-RateLimit-Remaining'));
            if (remaining < 5) {
                console.warn('API –ª–∏–º–∏—Ç –Ω–∞ –∏—Å—Ö–æ–¥–µ');
                return null;
            }

            if (!response.ok) throw new Error(`HTTP ${response.status}`);
            
            return await response.json();
        } catch (error) {
            if (i === retries - 1) throw error;
            await new Promise(resolve => setTimeout(resolve, 2000));
        }
    }
}

async function loadGitHubStats() {
    try {
        const cached = localStorage.getItem('gh-stats');
        if (cached) {
            const { data, timestamp } = JSON.parse(cached);
            if (Date.now() - timestamp < CACHE_TIME) {
                renderStats(data);
                return;
            }
        }

        // –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userRes = await fetch('https://api.github.com/users/IgorVasilekIV');
        if (!userRes.ok) throw new Error(`–û—à–∏–±–∫–∞ ${userRes.status}`);
        const userData = await userRes.json();

        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ —Å –ø–æ–≤—Ç–æ—Ä–æ–º –∑–∞–ø—Ä–æ—Å–æ–≤
        const repos = await fetchReposWithRetry('IgorVasilekIV');
        if (!repos) {
            renderStats(userData); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            return;
        }

        // –°—á–∏—Ç–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –∑–≤—ë–∑–¥—ã
        const stars = repos.reduce((sum, repo) => sum + repo.stargazers_count, 0);

        const stats = {
            repos: userData.public_repos,
            followers: userData.followers,
            stars: stars
        };

        localStorage.setItem('gh-stats', JSON.stringify({
            data: stats,
            timestamp: Date.now()
        }));

        renderStats(stats);

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        document.getElementById('github-stats').innerHTML = `
            <div class="error">
                <p>üì° –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è...</p>
                <small>${error.message.includes('403') ? '–õ–∏–º–∏—Ç API' : error.message}</small>
            </div>
        `;
    }
}

function renderStats({ repos, followers, stars }) {
    document.getElementById('github-stats').innerHTML = `
        <div class="stat-item">
            <h3>–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏</h3>
            <p>${repos}</p>
        </div>
        <div class="stat-item">
            <h3>–ü–æ–¥–ø–∏—Å—á–∏–∫–∏</h3>
            <p>${followers}</p>
        </div>
        <div class="stat-item">
            <h3>–ó–≤—ë–∑–¥—ã</h3>
            <p>${stars}</p>
        </div>
    `;
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', loadGitHubStats);
